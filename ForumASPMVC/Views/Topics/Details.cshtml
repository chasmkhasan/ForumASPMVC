@model ForumASPMVC.Models.ViewModels.DetailsTopicViewModel

@{
    ViewData["Title"] = "Details";
}



<h1>Details</h1>

<div>
    <h4>Topic</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Created)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Created)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
    <a asp-action="Index">Back to List</a> |
    <a asp-controller="ThreadOnes" asp-action="Create">
        Create New Thread
    </a>
</div>

@if (Model.Threads != null)
{
    <h3>Threads</h3>
    <table class="table" id="ThreadGrid">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Threads.FirstOrDefault().Id)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Threads.FirstOrDefault().Title)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Threads.FirstOrDefault().Text)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Threads.FirstOrDefault().Created)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Threads)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Text)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Created)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                        <a class="Details" href="javascript:;">Show comments</a> |
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a> |
                        <a asp-action="Create" asp-controller="Replies" asp-route-id="@item.Id">Reply</a> |
                        <a asp-action="Create" asp-controller="Comments" asp-route-id="@item.Id">Create comment</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
   
}else
{
        <h3>There is no thread available for this topic</h3>
}


<div id="ThreadBox">


</div>


<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="https://use.fontawesome.com/9da9b46707.js"></script>

<script type="text/javascript">
    $(function () {
        $("#ThreadGrid .Details").click(function () {
            var currentRow = $(this).closest("tr");
            var threadId = currentRow.find("td:eq(0)").html().trim();
            console.log("threadId: " + threadId);
            $.ajax({
                type: "GET",
                url: "/ThreadOnes/Details/" + threadId,
                contentType: "application/json; charset=utf-8",
                dataType: "html",
                success: function (response) {
                    $('#ThreadBox').html(response);
                },
                failure: function (response) {
                    alert(response.responseText);
                },
                error: function (response) {
                    alert(response.responseText);
                }
            });
        });
    });
</script>

